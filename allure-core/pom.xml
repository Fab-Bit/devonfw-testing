<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>allure-test-framework</artifactId>
        <groupId>com.capgemini.ntc</groupId>
        <version>1.0.0</version>
    </parent>
    <artifactId>allure-test-framework-core</artifactId>

    <name>AllureTestFramework - Core </name>
    <description>Allure Test Framework Core is reponsible for:
        * Test report with logs and/or screenshots
        * Test groups/tags
        * Data Driven (inside test case, external file) 
        * Test case parallel execution
        * BDD - Gherkin â€“ Cucumber approach
        * Run on independent OperatingSystem
        * Externalize test environment (DEV, QA, PROD)
    </description>
    <url>https://github.com/devonfw/devonfw-testing</url>

    <organization>
        <name>Capgemini  - Nearshore Test Center - Poland</name>
        <url>http://nsc.capgemini.com/nearshoretestcenter</url>
    </organization>

    <developers>
        <developer>
            <name>Lukasz Stefaniszyn</name>
            <email>stefaniszynlukasz@gmail.com</email>
        </developer>
    </developers>

    <properties>
        <project.build.sourceEncoding>UTF8</project.build.sourceEncoding>

        <!-- Java settings -->
        <java.compiler.version>1.8</java.compiler.version>

        <!-- Allure reporting -->
        <slf4j.version>1.7.21</slf4j.version>
        <allure.report.directory>${pom.basedir}/target/</allure.report.directory>
        <allure.version>1.5.4</allure.version>
        <allure-report.version>1.4.19</allure-report.version>
        <aspectj.version>1.8.9</aspectj.version>
        <allure-maven-plugin.version>2.6</allure-maven-plugin.version>
        <allure-cucumber-jvm-adaptor.version>1.6.3</allure-cucumber-jvm-adaptor.version>
        <report-directory>${pom.basedir}/test-output/</report-directory>
        <jetty.version>9.2.10.v20150310</jetty.version>

        <!-- Tests executors -->
        <maven-surefire-plugin.version>2.19.1</maven-surefire-plugin.version>
        <surefire.provider.version>1.0.0-M2</surefire.provider.version>
        <thread.count>8</thread.count>

        <!-- Tests logger -->
        <slf4j.version>1.7.21</slf4j.version>

        <!-- JSON support java 1.8 -->
        <org.json.version>20160810</org.json.version>

        <!-- Hashes sensitive data -->
        <org.jasypt.version>1.9.2</org.jasypt.version>

        <!-- spring version -->
        <spring.version>4.3.7.RELEASE</spring.version>

    </properties>

    <dependencies>

        <!--This dependency is necessary for JUnit plugin. -->
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-surefire-provider</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-core</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-library</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-csv</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>2.2</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>2.2</version>
        </dependency>

        <!--This dependency is necessary for JUnit plugin. -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
        </dependency>
        <dependency>
            <groupId>pl.pragmatists</groupId>
            <artifactId>JUnitParams</artifactId>
        </dependency>

        <!--This dependency is necessary for Allure report plugin. -->
        <dependency>
            <groupId>ru.yandex.qatools.allure</groupId>
            <artifactId>allure-junit-adaptor</artifactId>
        </dependency>

        <dependency>
            <groupId>ru.yandex.qatools.allure</groupId>
            <artifactId>allure-report-data</artifactId>
        </dependency>

        <dependency>
            <groupId>ru.yandex.qatools.allure</groupId>
            <artifactId>allure-maven-plugin</artifactId>
        </dependency>

        <dependency>
            <groupId>ru.yandex.qatools.allure</groupId>
            <artifactId>allure-cucumber-jvm-adaptor</artifactId>
        </dependency>

        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
        </dependency>


        <!--This dependency is necessary for testsuits runned with WildcardPatternSuite -->
        <dependency>
            <groupId>com.googlecode.junit-toolbox</groupId>
            <artifactId>junit-toolbox</artifactId>
            <version>1.9</version>
        </dependency>
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>${org.json.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <version>${jsoup.version}</version>
        </dependency>

        <!-- Dependencies for Cucumber -->
        <!-- https://mvnrepository.com/artifact/info.cukes/cucumber-java -->
        <dependency>
            <groupId>info.cukes</groupId>
            <artifactId>cucumber-java</artifactId>
        </dependency>

        <dependency>
            <groupId>info.cukes</groupId>
            <artifactId>cucumber-java8</artifactId>
        </dependency>

        <dependency>
            <groupId>info.cukes</groupId>
            <artifactId>cucumber-picocontainer</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.picocontainer</groupId>
            <artifactId>picocontainer</artifactId>
        </dependency>

        <dependency>
            <groupId>info.cukes</groupId>
            <artifactId>cucumber-junit</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>info.cukes</groupId>
            <artifactId>cucumber-core</artifactId>
        </dependency>

        <dependency>
            <groupId>net.masterthought</groupId>
            <artifactId>cucumber-reporting</artifactId>
        </dependency>


        <!-- Spring -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-expression</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>xml-apis</groupId>
            <artifactId>xml-apis</artifactId>
            <version>1.4.01</version>
        </dependency>


        <dependency>
            <groupId>org.jasypt</groupId>
            <artifactId>jasypt</artifactId>
            <version>${org.jasypt.version}</version>
        </dependency>

    </dependencies>




    <!-- Build goals/actions -->
    <build>
        <pluginManagement>
            <plugins>

                <!-- CLEAN -->
                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.0.0</version>
                    <configuration>
                        <filesets>
                            <fileset>
                                <directory>src/test/java/com/example/selenium/tests/cucumber/autogenerated_runners</directory>
                                <includes>
                                    <include>**/*.java</include>
                                </includes>
                                <followSymlinks>false</followSymlinks>
                            </fileset>
                            <fileset>
                                <directory>logs</directory>
                                <followSymlinks>false</followSymlinks>
                            </fileset>
                            <fileset>
                                <directory>${report-directory}</directory>
                            </fileset>
                        </filesets>
                    </configuration>
                </plugin>

                <!-- COMPILE -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.6.1</version>
                    <configuration>
                        <source>${java.compiler.version}</source>
                        <target>${java.compiler.version}</target>
                        <encoding>UTF-8</encoding>
                        <testSource>${java.compiler.version}</testSource>
                        <testTarget>${java.compiler.version}</testTarget>
                    </configuration>
                </plugin>


                <!-- START REPORT SERVER -->
                <!--Needed only to show reports locally. Run 'mvn jetty:run'
                    and open
                    'localhost:8080' to show the report -->
                <plugin>
                    <groupId>org.eclipse.jetty</groupId>
                    <artifactId>jetty-maven-plugin</artifactId>
                    <version>${jetty.version}</version>
                    <configuration>
                        <webAppSourceDirectory>${project.build.directory}/site/allure-maven-plugin</webAppSourceDirectory>
                        <stopKey>stop</stopKey>
                        <stopPort>1234</stopPort>
                    </configuration>
                </plugin>

            </plugins>
        </pluginManagement>
    </build>

    <profiles>
        <!-- RUN CLASSIC JUNIT TESTS -->
        <profile>
            <id>default</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>${maven-surefire-plugin.version}</version>
                        <configuration>
                            <testFailureIgnore>true</testFailureIgnore>
                            <parallel>classes</parallel>
                            <perCoreThreadCount>false</perCoreThreadCount>
                            <threadCount>${thread.count}</threadCount>
                            <includes>
                                <include>**/*.class</include>
                            </includes>
                            <excludes>
                                <exclude>**/RawTest.*</exclude>
                                <exclude>**/OutboxDocumentTest.*</exclude>
                            </excludes>
                            <argLine>
                                -javaagent:${settings.localRepository}/org/aspectj/aspectjweaver/${aspectj.version}/aspectjweaver-${aspectj.version}.jar
                            </argLine>
                            <properties>
                                <property>
                                    <name>listener</name>
                                    <value>ru.yandex.qatools.allure.junit.AllureRunListener</value>
                                </property>
                            </properties>

                        </configuration>
                        <dependencies>
                            <dependency>
                                <groupId>org.aspectj</groupId>
                                <artifactId>aspectjweaver</artifactId>
                                <version>${aspectj.version}</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>


    <reporting>
        <excludeDefaults>true</excludeDefaults>
        <plugins>
            <plugin>
                <groupId>ru.yandex.qatools.allure</groupId>
                <artifactId>allure-maven-plugin</artifactId>
                <version>${allure-maven-plugin.version}</version>
                <configuration>
                    <resultsPattern>target/allure-results</resultsPattern>
                    <reportPath>target/report</reportPath>
                    <reportDirectory>${allure.report.directory}/site/allure-report</reportDirectory>
                    <reportVersion>${allure-report.version}</reportVersion>
                </configuration>
            </plugin>
        </plugins>
    </reporting>
</project>